{"version":3,"sources":["cases/Entities/RegularPolygon.jsx","hooks/useCesium.js","../node_modules/cesium/Source/Core sync ///cesium//cesium//Source//Core//buildModuleUrl/.js","cases/components/CesiumContainer/CesiumContainer.jsx"],"names":["getRegularPolygonPositions","center","radius","sides","localToWorldMatrix","Transforms","eastNorthUpToFixedFrame","worldToLocalMatrix","Matrix4","inverse","localCenter","multiplyByPoint","Cartesian3","split","positions","i","radian","CesiumMath","toRadians","pointPosition","clone","x","Math","cos","y","sin","push","fromDegrees","RegularPolygonEntity","useCesium","viewer","entity","entities","add","polygon","hierarchy","PolygonHierarchy","fill","outline","outlineColor","Color","RED","zoomTo","callback","viewerRef","useRef","useEffect","Viewer","fullscreenElement","scene","debugShowFramesPerSecond","postProcessStages","fxaa","enabled","createViewer","current","destroy","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","CesiumContainer","children"],"mappings":"2HAAA,4CAmBA,SAASA,EAA2BC,EAAQC,EAAQC,GASlD,IARA,IAAMC,EAAqBC,IAAWC,wBAAwBL,GACxDM,EAAqBC,IAAQC,QAAQL,EAAoB,IAAII,KAE7DE,EAAcF,IAAQG,gBAAgBJ,EAAoBN,EAAQ,IAAIW,KAEtEC,EAAQ,IAAMV,EACdW,EAAY,GAETC,EAAI,EAAGA,GAAKZ,EAAOY,IAAK,CAC/B,IAAMC,EAASC,IAAWC,UAAUL,EAAQE,GACtCI,EAAgBT,EAAYU,QAClCD,EAAcE,GAAKC,KAAKC,IAAIP,GAAUd,EACtCiB,EAAcK,GAAKF,KAAKG,IAAIT,GAAUd,EACtCY,EAAUY,KAAKlB,IAAQG,gBAAgBP,EAAoBe,EAAe,IAAIP,MAGhF,OAAOE,EAGT,IAAMb,EAASW,IAAWe,YAAY,WAAY,SAAU,GAsB7CC,UApBf,WAiBE,OAhBAC,aAAU,SAAAC,GACR,IAAK,IAAIf,EAAI,EAAGA,GAAK,EAAGA,IAAK,CAC3B,IAAMgB,EAASD,EAAOE,SAASC,IAAI,CACjCC,QAAS,CACPC,UAAW,IAAIC,IAAiBpC,EAA2BC,EAAY,IAAJc,EAASA,IAC5EsB,MAAM,EACNC,SAAS,EACTC,aAAcC,IAAMC,OAGd,IAAN1B,GACFe,EAAOY,OAAOX,OAKb,cAAC,UAAD,M,uDC1DT,oBAgDeF,IA/Bf,SAAmBc,GACjB,IAAMC,EAAYC,iBAAO,MAgBzB,OAfAC,qBAAU,WACR,IAAMhB,EAiBV,WACE,IAAMA,EAAS,IAAIiB,IAAO,kBAAmB,CAC3CC,kBAAmB,oBAMrB,OAHAlB,EAAOmB,MAAMC,0BAA2B,EACxCpB,EAAOmB,MAAME,kBAAkBC,KAAKC,SAAU,EAEvCvB,EAzBUwB,GAKf,OAJAV,EAAUW,QAAUzB,EAEpBa,GAAYA,EAASb,GAEd,WACL,IACEA,EAAO0B,UACP,cAIH,IAEIZ,I,kBClCT,SAASa,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBK,KAAO,WAAa,MAAO,IAC/CL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,K,wECRzB,yBAMeC,UAJf,YAAwC,IAAbC,EAAY,EAAZA,SACzB,OAAO,qBAAKF,GAAG,kBAAR,SAA2BE","file":"static/js/12.c7860f64.chunk.js","sourcesContent":["import useCesium from '@/hooks/useCesium'\nimport CesiumContainer from '@/cases/components/CesiumContainer/CesiumContainer'\nimport {\n  Cartesian3,\n  Transforms,\n  Matrix4,\n  Math as CesiumMath,\n  PolygonHierarchy,\n  Color\n} from 'cesium'\n\n/**\n * Get regular polygon positions.\n *\n * @param {Cartesian3} center Position of center.\n * @param {number} radius Radius of polygon.\n * @param {number} sides Number of sides.\n * @returns\n */\nfunction getRegularPolygonPositions(center, radius, sides) {\n  const localToWorldMatrix = Transforms.eastNorthUpToFixedFrame(center)\n  const worldToLocalMatrix = Matrix4.inverse(localToWorldMatrix, new Matrix4())\n\n  const localCenter = Matrix4.multiplyByPoint(worldToLocalMatrix, center, new Cartesian3())\n\n  const split = 360 / sides\n  const positions = []\n\n  for (let i = 0; i <= sides; i++) {\n    const radian = CesiumMath.toRadians(split * i)\n    const pointPosition = localCenter.clone()\n    pointPosition.x += Math.cos(radian) * radius\n    pointPosition.y += Math.sin(radian) * radius\n    positions.push(Matrix4.multiplyByPoint(localToWorldMatrix, pointPosition, new Cartesian3()))\n  }\n\n  return positions\n}\n\nconst center = Cartesian3.fromDegrees(136.038234, 36.88456, 0)\n\nfunction RegularPolygonEntity() {\n  useCesium(viewer => {\n    for (let i = 3; i <= 8; i++) {\n      const entity = viewer.entities.add({\n        polygon: {\n          hierarchy: new PolygonHierarchy(getRegularPolygonPositions(center, i * 100, i)),\n          fill: false,\n          outline: true,\n          outlineColor: Color.RED\n        }\n      })\n      if (i === 3) {\n        viewer.zoomTo(entity)\n      }\n    }\n  })\n\n  return <CesiumContainer />\n}\n\nexport default RegularPolygonEntity\n","import { useEffect, useRef } from 'react'\nimport { Viewer } from 'cesium'\n\n/**\n * @callback CesiumHandler\n *\n * @param {Viewer} viewer Viewer instance.\n */\n\n/** @typedef {import('react')} React */\n\n/**\n * Use cesium hook.\n *\n * @param {CesiumHandler} callback\n * @returns {React.MutableRefObject.<null|Viewer>}\n */\nfunction useCesium(callback) {\n  const viewerRef = useRef(null)\n  useEffect(() => {\n    const viewer = createViewer()\n    viewerRef.current = viewer\n\n    callback && callback(viewer)\n\n    return () => {\n      try {\n        viewer.destroy()\n      } catch {}\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return viewerRef\n}\n\nfunction createViewer() {\n  const viewer = new Viewer('cesiumContainer', {\n    fullscreenElement: 'cesiumContainer'\n  })\n\n  viewer.scene.debugShowFramesPerSecond = true\n  viewer.scene.postProcessStages.fxaa.enabled = true\n\n  return viewer\n}\n\nexport default useCesium\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 190;","import './CesiumContainer.less'\n\nfunction CesiumContainer({ children }) {\n  return <div id=\"cesiumContainer\">{children}</div>\n}\n\nexport default CesiumContainer\n"],"sourceRoot":""}