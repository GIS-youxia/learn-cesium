{"version":3,"sources":["cases/Cesium3DTiles/HeatZone.jsx","cases/Cesium3DTiles/colorBuildingFS.glsl","hooks/useCesium.js","../node_modules/cesium/Source/Core sync ///cesium//cesium//Source//Core//buildModuleUrl/.js","cases/components/CesiumContainer/CesiumContainer.jsx","cases/components/Toolbar/Toolbar.jsx"],"names":["colorByDistanceToCoordinate","longitude","latitude","Cesium3DTileStyle","defines","height","distance","color","conditions","HeatZone","useCesium","viewer","a","terrainProvider","createWorldTerrain","tileset","createOsmBuildings","scene","primitives","add","colorBlendMode","ColorBlendMode","REPLACE","style","camera","setView","destination","Cartesian3","fromDegrees","orientation","heading","CesiumMath","toRadians","pitch","tileVisible","addEventListener","tile","_model","content","_sourcePrograms","_rendererResources","Object","keys","forEach","key","program","sourceShaders","fragmentShader","colorBuildingFS","_shouldRegenerateShaders","ScreenSpaceEventHandler","canvas","setInputAction","movement","selectedEntity","undefined","pickedBuilding","pick","position","pickedLatitude","getProperty","pickedLongitude","console","log","ScreenSpaceEventType","LEFT_CLICK","module","exports","callback","viewerRef","useRef","useEffect","Viewer","fullscreenElement","debugShowFramesPerSecond","postProcessStages","fxaa","enabled","createViewer","current","destroy","webpackEmptyContext","req","e","Error","code","resolve","id","CesiumContainer","children","Toolbar","className"],"mappings":"oOA0EA,SAASA,IAGN,IAFDC,EAEA,wDAFa,mBACbC,EACA,uDADW,mBAEX,OAAO,IAAIC,IAAkB,CAC3BC,QAAS,CACPC,OAAQ,uCACRC,SAAS,sFAAD,OAA0FL,EAA1F,aAAwGC,EAAxG,OAEVK,MAAO,CACLC,WAAY,CAEV,CAAC,sBAAuB,oBACxB,CAAC,sBAAuB,oBACxB,CAAC,sBAAuB,oBAExB,CAAC,sBAAuB,oBACxB,CAAC,sBAAuB,oBACxB,CAAC,qBAAsB,oBAEvB,CAAC,qBAAsB,oBACvB,CAAC,sBAAuB,oBACxB,CAAC,qBAAsB,oBAEvB,CAAC,qBAAsB,oBACvB,CAAC,uBAAwB,oBACzB,CAAC,sBAAuB,wBAMjBC,UA1FE,WAmDf,OAlDAC,YAAS,uCAAC,WAAMC,GAAN,eAAAC,EAAA,sDACRD,EAAOE,gBAAkBC,cAEnBC,EAAUC,cAEhBL,EAAOM,MAAMC,WAAWC,IAAIJ,GAC5BA,EAAQK,eAAiBC,IAAeC,QACxCP,EAAQQ,MAAQvB,IAEhBW,EAAOM,MAAMO,OAAOC,QAAQ,CAC1BC,YAAaC,IAAWC,aAAa,SAAU,OAAQ,KACvDC,YAAa,CACXC,QAASC,IAAWC,UAAU,IAC9BC,MAAOF,IAAWC,WAAW,OAIjCjB,EAAQmB,YAAYC,kBAElB,SAAAC,GACE,IACQC,EADYD,EAAZE,QACAD,OAEJA,GAAUA,EAAOE,iBAAmBF,EAAOG,qBAC7CC,OAAOC,KAAKL,EAAOE,iBAAiBI,SAAQ,SAAAC,GAC1C,IAAMC,EAAUR,EAAOE,gBAAgBK,GAGvCP,EAAOG,mBAAmBM,cAAcD,EAAQE,gBAAkBC,OAIpEX,EAAOY,0BAA2B,MAKxB,IAAIC,IAAwBvC,EAAOwC,QAC3CC,gBAAe,SAAAC,GACrB1C,EAAO2C,oBAAiBC,EACxB,IAAIC,EAAiB7C,EAAOM,MAAMwC,KAAKJ,EAASK,UAChD,GAAIF,EAAgB,CAClB,IAAIG,EAAiBH,EAAeI,YAAY,mBAC5CC,EAAkBL,EAAeI,YAAY,oBACjDE,QAAQC,IAAIJ,EAAgBE,GAC5B9C,EAAQQ,MAAQvB,EAA4B6D,EAAiBF,MAE9DK,IAAqBC,YA/ChB,2CAAD,uDAmDP,cAAC,UAAD,UACE,cAAC,UAAD,qE,8DCrENC,EAAOC,QAAU,w6B,iCCAjB,oBAgDezD,IA/Bf,SAAmB0D,GACjB,IAAMC,EAAYC,iBAAO,MAgBzB,OAfAC,qBAAU,WACR,IAAM5D,EAiBV,WACE,IAAMA,EAAS,IAAI6D,IAAO,kBAAmB,CAC3CC,kBAAmB,oBAMrB,OAHA9D,EAAOM,MAAMyD,0BAA2B,EACxC/D,EAAOM,MAAM0D,kBAAkBC,KAAKC,SAAU,EAEvClE,EAzBUmE,GAKf,OAJAT,EAAUU,QAAUpE,EAEpByD,GAAYA,EAASzD,GAEd,WACL,IACEA,EAAOqE,UACP,cAIH,IAEIX,I,kBClCT,SAASY,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,EAEPF,EAAoBvC,KAAO,WAAa,MAAO,IAC/CuC,EAAoBK,QAAUL,EAC9Bf,EAAOC,QAAUc,EACjBA,EAAoBM,GAAK,K,wECRzB,yBAMeC,UAJf,YAAwC,IAAbC,EAAY,EAAZA,SACzB,OAAO,qBAAKF,GAAG,kBAAR,SAA2BE,M,gCCHpC,yBAMeC,UAJf,YAAgC,IAAbD,EAAY,EAAZA,SACjB,OAAO,qBAAKE,UAAU,UAAf,SAA0BF","file":"static/js/6.ef54263c.chunk.js","sourcesContent":["/* eslint-disable no-template-curly-in-string */\nimport useCesium from '@/hooks/useCesium'\nimport CesiumContainer from '@/cases/components/CesiumContainer/CesiumContainer'\nimport Toolbar from '@/cases/components/Toolbar/Toolbar'\nimport {\n  createWorldTerrain,\n  createOsmBuildings,\n  ColorBlendMode,\n  Cesium3DTileStyle,\n  Cartesian3,\n  Math as CesiumMath,\n  ScreenSpaceEventHandler,\n  ScreenSpaceEventType\n} from 'cesium'\nimport colorBuildingFS from './colorBuildingFS.glsl'\n\nconst HeatZone = () => {\n  useCesium(async viewer => {\n    viewer.terrainProvider = createWorldTerrain()\n\n    const tileset = createOsmBuildings()\n\n    viewer.scene.primitives.add(tileset)\n    tileset.colorBlendMode = ColorBlendMode.REPLACE\n    tileset.style = colorByDistanceToCoordinate()\n\n    viewer.scene.camera.setView({\n      destination: Cartesian3.fromDegrees(-122.3472, 47.598, 370),\n      orientation: {\n        heading: CesiumMath.toRadians(10),\n        pitch: CesiumMath.toRadians(-10)\n      }\n    })\n\n    tileset.tileVisible.addEventListener(\n      /** @param {import('cesium').Cesium3DTile} tile */\n      tile => {\n        const { content } = tile\n        const { _model } = content\n\n        if (_model && _model._sourcePrograms && _model._rendererResources) {\n          Object.keys(_model._sourcePrograms).forEach(key => {\n            const program = _model._sourcePrograms[key]\n\n            // Custom shaders.\n            _model._rendererResources.sourceShaders[program.fragmentShader] = colorBuildingFS\n          })\n\n          // Recompile shader.\n          _model._shouldRegenerateShaders = true\n        }\n      }\n    )\n\n    const handler = new ScreenSpaceEventHandler(viewer.canvas)\n    handler.setInputAction(movement => {\n      viewer.selectedEntity = undefined\n      var pickedBuilding = viewer.scene.pick(movement.position)\n      if (pickedBuilding) {\n        var pickedLatitude = pickedBuilding.getProperty('cesium#latitude')\n        var pickedLongitude = pickedBuilding.getProperty('cesium#longitude')\n        console.log(pickedLatitude, pickedLongitude)\n        tileset.style = colorByDistanceToCoordinate(pickedLongitude, pickedLatitude)\n      }\n    }, ScreenSpaceEventType.LEFT_CLICK)\n  })\n\n  return (\n    <CesiumContainer>\n      <Toolbar>Click a building to set it as center of heat zone.</Toolbar>\n    </CesiumContainer>\n  )\n}\n\nfunction colorByDistanceToCoordinate(\n  longitude = -122.33317436409693,\n  latitude = 47.608251670406524\n) {\n  return new Cesium3DTileStyle({\n    defines: {\n      height: '${feature[\"cesium#estimatedHeight\"]}',\n      distance: `distance(vec2(\\${feature['cesium#longitude']}, \\${feature['cesium#latitude']}), vec2(${longitude}, ${latitude}))`\n    },\n    color: {\n      conditions: [\n        // red\n        ['${distance} < 0.001', 'color(\"#fd3215\")'],\n        ['${distance} < 0.002', 'color(\"#d95612\")'],\n        ['${distance} < 0.003', 'color(\"#b25632\")'],\n        // yellow\n        ['${distance} < 0.005', 'color(\"#a67325\")'],\n        ['${distance} < 0.008', 'color(\"#969325\")'],\n        ['${distance} < 0.01', 'color(\"#76b205\")'],\n        // green\n        ['${distance} < 0.01', 'color(\"#56c205\")'],\n        ['${distance} < 0.015', 'color(\"#31d315\")'],\n        ['${distance} < 0.02', 'color(\"#16ec37\")'],\n        // blue\n        ['${distance} < 0.02', 'color(\"#16cc77\")'],\n        ['${distance} < 0.0275', 'color(\"#159c92\")'],\n        ['${distance} < 0.035', 'color(\"#145bb5\")']\n      ]\n    }\n  })\n}\n\nexport default HeatZone\n","module.exports = \"precision highp float;\\n\\nuniform vec4 u_baseColorFactor;\\n\\nvarying vec3 v_positionEC;\\nvarying vec3 v_normal;\\n\\nvec4 getPhongColor(vec4 color) {\\n  vec3 positionToEyeEC = -v_positionEC;\\n\\n  czm_material material;\\n  material.diffuse = color.rgb;\\n  material.specular = 0.0;\\n  material.shininess = 1.0;\\n  material.normal = v_normal;\\n  material.emission = vec3(0.0);\\n  material.alpha = color.a;\\n\\n  return czm_phong(normalize(positionToEyeEC), material, czm_lightDirectionEC);\\n\\n}\\n\\nvoid main(void) {\\n  vec4 color = u_baseColorFactor;\\n  vec4 position = czm_inverseModelView * vec4(v_positionEC, 1.);\\n\\n  float time = czm_frameNumber / 73.;\\n\\n  float flow = sin(time) * .25 + .75;\\n  float deep = clamp(position.z / (200. + 50. * flow) + .5 * flow, 0., 1.5);\\n  vec4 postColor = color * deep;\\n\\n  vec4 phongColor = getPhongColor(vec4(postColor.rgb, 1.));\\n\\n  gl_FragColor = mix(phongColor, postColor, flow - .25);\\n}\\n\";","import { useEffect, useRef } from 'react'\nimport { Viewer } from 'cesium'\n\n/**\n * @callback CesiumHandler\n *\n * @param {Viewer} viewer Viewer instance.\n */\n\n/** @typedef {import('react')} React */\n\n/**\n * Use cesium hook.\n *\n * @param {CesiumHandler} callback\n * @returns {React.MutableRefObject.<null|Viewer>}\n */\nfunction useCesium(callback) {\n  const viewerRef = useRef(null)\n  useEffect(() => {\n    const viewer = createViewer()\n    viewerRef.current = viewer\n\n    callback && callback(viewer)\n\n    return () => {\n      try {\n        viewer.destroy()\n      } catch {}\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return viewerRef\n}\n\nfunction createViewer() {\n  const viewer = new Viewer('cesiumContainer', {\n    fullscreenElement: 'cesiumContainer'\n  })\n\n  viewer.scene.debugShowFramesPerSecond = true\n  viewer.scene.postProcessStages.fxaa.enabled = true\n\n  return viewer\n}\n\nexport default useCesium\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 202;","import './CesiumContainer.less'\n\nfunction CesiumContainer({ children }) {\n  return <div id=\"cesiumContainer\">{children}</div>\n}\n\nexport default CesiumContainer\n","import './Toolbar.less'\n\nfunction Toolbar({ children }) {\n  return <div className=\"toolbar\">{children}</div>\n}\n\nexport default Toolbar\n"],"sourceRoot":""}