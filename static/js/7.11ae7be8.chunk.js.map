{"version":3,"sources":["hooks/useCesium.js","../node_modules/cesium/Source/Core sync ///cesium//cesium//Source//Core//buildModuleUrl/.js","utils/cesium.js","cases/components/CesiumContainer/CesiumContainer.jsx","cases/components/Toolbar/Toolbar.jsx","cases/CZML/ViewFrom.jsx"],"names":["useCesium","callback","viewerRef","useRef","useEffect","viewer","Viewer","fullscreenElement","scene","debugShowFramesPerSecond","postProcessStages","fxaa","enabled","createViewer","current","destroy","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","getHeadingPitchRoll","p1","p2","heading","getHeadingDegree","pitch","x1","x","y1","y","z1","z","x2","y2","z2","xDiff","yDiff","zDiff","distance","Cartesian3","sinTheta","theta","Math","abs","asin","PI","getPitchDegree","roll","dividend","divisor","tanAlpha","alpha","atan","multiplier","CesiumContainer","children","Toolbar","className","duration","startDegrees","endDegrees","startPosition","fromDegrees","endPosition","localToWorldMatrix","Transforms","eastNorthUpToFixedFrame","worldToLocalMatrix","Matrix4","inverse","startLocalPosition","multiplyByPoint","endLocalPosition","getViewFrom","backwardDistance","console","log","BroaderVision","clock","shouldAnimate","loadCZML","a","currentTime","startISO","JulianDate","toIso8601","endTime","addSeconds","endISO","czml","name","version","interval","availability","path","material","solidColor","color","rgba","width","leadTime","trailTime","resolution","point","pixelSize","position","epoch","cartographicDegrees","dataSources","removeAll","CzmlDataSource","load","dataSource","add","entities","getById","trackedEntity","appearance","onClick","size"],"mappings":"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","file":"static/js/7.11ae7be8.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react'\nimport { Viewer } from 'cesium'\n\n/**\n * @callback CesiumHandler\n *\n * @param {Viewer} viewer Viewer instance.\n */\n\n/** @typedef {import('react')} React */\n\n/**\n * Use cesium hook.\n *\n * @param {CesiumHandler} callback\n * @returns {React.MutableRefObject.<null|Viewer>}\n */\nfunction useCesium(callback) {\n  const viewerRef = useRef(null)\n  useEffect(() => {\n    const viewer = createViewer()\n    viewerRef.current = viewer\n\n    callback && callback(viewer)\n\n    return () => {\n      try {\n        viewer.destroy()\n      } catch {}\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return viewerRef\n}\n\nfunction createViewer() {\n  const viewer = new Viewer('cesiumContainer', {\n    fullscreenElement: 'cesiumContainer'\n  })\n\n  viewer.scene.debugShowFramesPerSecond = true\n  viewer.scene.postProcessStages.fxaa.enabled = true\n\n  return viewer\n}\n\nexport default useCesium\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 202;","import { Cartographic, Transforms, Matrix4, Cartesian3 } from 'cesium'\n\n/**\n * Add height of a Cartesian3 instance.\n *\n * @param {Cartesian3} cartesian Cartesian3 instance.\n * @param {number} height Height to add.\n */\nexport function addHeight(cartesian, height) {\n  const cartographic = Cartographic.fromCartesian(cartesian)\n  cartographic.height += height\n\n  return Cartographic.toCartesian(cartographic)\n}\n\n/**`\n * Set height of a Cartesian3 instance.\n *\n * @param {Cartesian3} cartesian Cartesian3 instance.\n * @param {number} height Height to set.\n */\nexport function setHeight(cartesian, height) {\n  const cartographic = Cartographic.fromCartesian(cartesian)\n  cartographic.height = height\n\n  return Cartographic.toCartesian(cartographic)\n}\n\n/**\n * Get heading pitch and roll\n *\n * @param {Cartesian3} p1 The first position.\n * @param {Cartesian3} p2 Another position.\n */\nexport function getHeadingPitchRoll(p1, p2) {\n  let heading = getHeadingDegree(p1, p2)\n  let pitch = getPitchDegree(p1, p2)\n\n  return {\n    heading,\n    pitch,\n    roll: 0\n  }\n}\n\n/**\n * Get heading degree.\n *\n * @param {Cartesian3} p1 The first position.\n * @param {Cartesian3} p2 Another position.\n * @returns Heading degree.\n */\nexport function getHeadingDegree(p1, p2) {\n  const { x: x1, y: y1 } = p1\n  const { x: x2, y: y2 } = p2\n\n  const dividend = x2 - x1\n  const divisor = y2 - y1\n\n  // If x2=x1, alpha could only be 0 or 180.\n  if (dividend === 0) {\n    return divisor >= 0 ? 0 : 180\n  }\n\n  // If y2=y1, alpha could only be 90 or -90.\n  if (divisor === 0) {\n    // There is no equal judgement due to it already be done above.\n    return dividend > 0 ? 90 : -90\n  }\n\n  // Calculate the alpha angle.\n  const tanAlpha = (x2 - x1) / (y2 - y1)\n  const alpha = (Math.atan(tanAlpha) / Math.PI) * 180\n\n  if (divisor > 0) {\n    return alpha\n  } else {\n    // If y2-y1<0, alpha is just the supplement of real angle.\n    const multiplier = x2 - x1 > 0 ? 1 : -1\n    const realAlpha = (180 - Math.abs(alpha)) * multiplier\n    return realAlpha\n  }\n}\n\n/**\n * Get pitch degree.\n *\n * @param {Cartesian3} p1 The first position.\n * @param {Cartesian3} p2 Another position.\n * @returns Pitch degree.\n */\nexport function getPitchDegree(p1, p2) {\n  const { x: x1, y: y1, z: z1 } = p1\n  const { x: x2, y: y2, z: z2 } = p2\n\n  const xDiff = x2 - x1\n  const yDiff = y2 - y1\n  const zDiff = z2 - z1\n\n  // The new position is laid on x-y surface, so there\n  // is no pitch.\n  if (zDiff === 0) {\n    return 0\n  }\n\n  // The new position is laid on z-axis, so if z2-z1>0,\n  // 90; if z2-z1<0, -90.\n  if (xDiff === 0 && yDiff === 0) {\n    return zDiff > 0 ? 90 : -90\n  }\n\n  const distance = Cartesian3.distance(p1, p2)\n\n  // tanÎ¸=distance from new position to sub point / distance from\n  // sub point to previous position.\n  const sinTheta = (z2 - z1) / distance\n  const theta = (Math.abs(Math.asin(sinTheta)) / Math.PI) * 180\n\n  // Pitch's plus or minus is according to z2-z1, if z2-z1>0, positive\n  // otherwise negative.\n  return zDiff > 0 ? theta : -theta\n}\n\n/**\n * Get local positions.\n *\n * @param {Cartesian3} prev Prev Cartesian3 position.\n * @param {Cartesian3} next Next Cartesian3 position.\n * @returns {{prev: Cartesian3, next: Cartesian3, localToWorldMatrix: Matrix4, worldToLocalMatrix: Matrix4}} Local positions\n */\nexport function getLocalPositions(prev, next) {\n  const localToWorldMatrix = Transforms.eastNorthUpToFixedFrame(prev)\n  const worldToLocalMatrix = Matrix4.inverse(localToWorldMatrix, new Matrix4())\n\n  const localPosition = Matrix4.multiplyByPoint(worldToLocalMatrix, prev, new Cartesian3())\n  const newPosition = Matrix4.multiplyByPoint(worldToLocalMatrix, next, new Cartesian3())\n\n  return {\n    prev: localPosition,\n    next: newPosition,\n    localToWorldMatrix,\n    worldToLocalMatrix\n  }\n}\n\n/**\n * @param {Cartesian3} postion1\n * @param {Cartesian3} postion2\n * @param {number} pitch\n * @param {number} backward\n * @returns\n */\nexport function getWiderView(postion1, postion2, pitch = -45, backward = 600) {\n  const { prev, next, localToWorldMatrix } = getLocalPositions(postion1, postion2)\n  const heading = getHeadingDegree(prev, next)\n\n  if (pitch === -90) {\n    const _position = prev.clone()\n    _position.z += backward\n    const position = Matrix4.multiplyByPoint(localToWorldMatrix, _position, new Cartesian3())\n    return {\n      position,\n      groundPosition: prev,\n      heading,\n      pitch,\n      roll: 0\n    }\n  }\n\n  const mx = heading > 0 ? -1 : 1\n  const my = Math.abs(heading) < 90 ? -1 : 1\n  const alpha = Math.abs(heading) <= 90 ? Math.abs(heading) : 180 - Math.abs(heading)\n  const alphaRadian = Math.toRadians(alpha)\n  const theta = 90 + pitch\n  const thetaRadian = Math.toRadians(theta)\n\n  const deltaX = backward * Math.sin(alphaRadian) * mx\n  const deltaY = backward * Math.cos(alphaRadian) * my\n  const deltaZ = backward / Math.tan(thetaRadian)\n\n  const _groundPosition = prev.clone()\n\n  _groundPosition.x += deltaX\n  _groundPosition.y += deltaY\n\n  const _position = _groundPosition.clone()\n\n  _position.z += deltaZ\n\n  const position = Matrix4.multiplyByPoint(localToWorldMatrix, _position, new Cartesian3())\n  const groundPosition = Matrix4.multiplyByPoint(\n    localToWorldMatrix,\n    _groundPosition,\n    new Cartesian3()\n  )\n\n  return {\n    position,\n    groundPosition,\n    heading,\n    pitch,\n    roll: 0\n  }\n}\n","import './CesiumContainer.less'\n\nfunction CesiumContainer({ children }) {\n  return <div id=\"cesiumContainer\">{children}</div>\n}\n\nexport default CesiumContainer\n","import './Toolbar.less'\n\nfunction Toolbar({ children }) {\n  return <div className=\"toolbar\">{children}</div>\n}\n\nexport default Toolbar\n","import CesiumContainer from '@/cases/components/CesiumContainer/CesiumContainer'\nimport Toolbar from '@/cases/components/Toolbar/Toolbar'\nimport useCesium from '@/hooks/useCesium'\nimport { Cartesian3, JulianDate, CzmlDataSource, Transforms, Matrix4 } from 'cesium'\nimport { Button } from 'rsuite'\nimport { getHeadingDegree } from '@/utils/cesium'\n\nconst duration = 30\nconst startDegrees = [115.32415, 36.157965, 88.5]\nconst endDegrees = [115.452157, 36.0943875, 76.33]\nconst startPosition = Cartesian3.fromDegrees(...startDegrees)\nconst endPosition = Cartesian3.fromDegrees(...endDegrees)\n\nconst localToWorldMatrix = Transforms.eastNorthUpToFixedFrame(startPosition)\nconst worldToLocalMatrix = Matrix4.inverse(localToWorldMatrix, new Matrix4())\nconst startLocalPosition = Matrix4.multiplyByPoint(\n  worldToLocalMatrix,\n  startPosition,\n  new Cartesian3()\n)\nconst endLocalPosition = Matrix4.multiplyByPoint(worldToLocalMatrix, endPosition, new Cartesian3())\nconst heading = getHeadingDegree(startLocalPosition, endLocalPosition)\n\n/**\n * Calculate viewFrom of czml.\n *\n * @param {Number} pitch Pitch of view.\n * @param {Number} backwardDistance Backwward sitance.\n */\nexport function getViewFrom(pitch = -45, backwardDistance = 1000) {\n  if (pitch === -90) {\n    return [0, 0, backwardDistance]\n  }\n  console.log(heading)\n}\n\nfunction BroaderVision() {\n  const viewerRef = useCesium(viewer => {\n    viewer.clock.shouldAnimate = true\n  })\n\n  /**\n   * Load CZML data. If withViewFrom is true, then we should see\n   * it from start position to end position with specific pitch and\n   * backward distance.\n   *\n   * @param {Boolean} withViewFrom Should use viewFrom property.\n   */\n  async function loadCZML(withViewFrom = false) {\n    const viewer = viewerRef.current\n    if (!viewer) return\n\n    const { currentTime } = viewer.clock\n    const startISO = JulianDate.toIso8601(currentTime)\n    const endTime = JulianDate.addSeconds(currentTime, duration, new JulianDate())\n    const endISO = JulianDate.toIso8601(endTime)\n\n    const czml = [\n      {\n        id: 'document',\n        name: 'CZML Path',\n        version: '1.0',\n        clock: {\n          interval: `${startISO}/${endISO}`,\n          currentTime: startISO,\n          multiplier: 3\n        }\n      },\n      {\n        id: 'path',\n        name: 'A czml path',\n        availability: `${startISO}/${endISO}`,\n        path: {\n          material: {\n            solidColor: {\n              color: {\n                rgba: [255, 0, 0, 255]\n              }\n            }\n          },\n          width: 8,\n          leadTime: 10,\n          trailTime: 1000,\n          resolution: 5\n        },\n        point: {\n          color: {\n            rgba: [255, 255, 255, 255]\n          },\n          pixelSize: 20\n        },\n        position: {\n          epoch: startISO,\n          cartographicDegrees: [0, ...startDegrees, duration, ...endDegrees]\n        }\n      }\n    ]\n\n    viewer.dataSources.removeAll()\n\n    const dataSource = await CzmlDataSource.load(czml)\n    viewer.dataSources.add(dataSource)\n    const path = dataSource.entities.getById('path')\n    viewer.trackedEntity = path\n  }\n\n  return (\n    <CesiumContainer>\n      <Toolbar>\n        <Button appearance=\"primary\" onClick={loadCZML} size=\"sm\">\n          Load CZML\n        </Button>\n        &nbsp;&nbsp;\n        <Button onClick={() => loadCZML(true)} size=\"sm\">\n          Load CZML With ViewFrom\n        </Button>\n      </Toolbar>\n    </CesiumContainer>\n  )\n}\n\nexport default BroaderVision\n"],"sourceRoot":""}