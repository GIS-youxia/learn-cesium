{"version":3,"sources":["pages/3DModel/index.js"],"names":["Model","useEffect","viewer","Cesium","CesiumWidget","scene","ScreenSpaceEventHandler","canvas","setInputAction","movement","pick","endPosition","defined","node","mesh","console","log","name","ScreenSpaceEventType","MOUSE_MOVE","pitch","Math","toRadians","roll","url","height","heading","hpr","HeadingPitchRoll","origin","Cartesian3","fromDegrees","modelMatrix","Transforms","headingPitchRollToFixedFrame","primitives","removeAll","add","fromGltf","minimumPixelSize","readyPromise","then","model","color","Color","fromAlpha","WHITE","colorBlendMode","ColorBlendMode","HIGHLIGHT","colorBlendAmount","activeAnimations","addAll","multiplier","loop","ModelAnimationLoop","REPEAT","camera","controller","screenSpaceCameraController","r","max","boundingSphere","radius","frustum","near","minimumZoomDistance","center","Matrix4","multiplyByPoint","lookAt","HeadingPitchRange","otherwise","error","createModel","MODELS_URL","id"],"mappings":"mHAAA,2CAkFeA,UA3ED,WAwEZ,OAvEAC,qBAAU,WACR,IAAMC,EAAS,IAAIC,IAAOC,aAAa,SAE/BC,EAAUH,EAAVG,MAoDQ,IAAIF,IAAOG,wBAAwBD,EAAME,QACjDC,gBAAe,SAAUC,GAC/B,IAAMC,EAAOL,EAAMK,KAAKD,EAASE,aAC7BR,IAAOS,QAAQF,IAASP,IAAOS,QAAQF,EAAKG,OAASV,IAAOS,QAAQF,EAAKI,OAE3EC,QAAQC,IAAI,SAAWN,EAAKG,KAAKI,KAAO,WAAaP,EAAKI,KAAKG,QAEhEd,IAAOe,qBAAqBC,YAE/B,IAEMC,EAAQjB,IAAOkB,KAAKC,UAAU,IAC9BC,EAAOpB,IAAOkB,KAAKC,WAAW,KA9DpC,SAAqBE,GAA4D,IAAvDC,EAAsD,uDAA7C,EAAKC,EAAwC,uDAA9B,EAAKN,EAAyB,uDAAjB,EAAKG,EAAY,uDAAL,EACnEI,EAAM,IAAIxB,IAAOyB,iBAAiBF,EAASN,EAAOG,GAElDM,EAAS1B,IAAO2B,WAAWC,aAAa,YAAa,WAAYN,GACjEO,EAAc7B,IAAO8B,WAAWC,6BAA6BL,EAAQF,GAE3EtB,EAAM8B,WAAWC,YAET/B,EAAM8B,WAAWE,IACvBlC,IAAOH,MAAMsC,SAAS,CACpBd,MACAQ,YAAaA,EACbO,iBAAkB,OAIhBC,aACHC,MAAK,SAAUC,GACdA,EAAMC,MAAQxC,IAAOyC,MAAMC,UAAU1C,IAAOyC,MAAME,MAAO,GACzDJ,EAAMK,eAAiB5C,IAAO6C,eAAeC,UAC7CP,EAAMQ,iBAAmB,GAGzBR,EAAMS,iBAAiBC,OAAO,CAC5BC,WAAY,GACZC,KAAMnD,IAAOoD,mBAAmBC,SAGlC,IAAMC,EAASvD,EAAOuD,OAGhBC,EAAarD,EAAMsD,4BACnBC,EAAI,EAAMvC,KAAKwC,IAAInB,EAAMoB,eAAeC,OAAQN,EAAOO,QAAQC,MACrEP,EAAWQ,oBAA0B,GAAJN,EAEjC,IAAMO,EAAShE,IAAOiE,QAAQC,gBAC5B3B,EAAMV,YACNU,EAAMoB,eAAeK,OACrB,IAAIhE,IAAO2B,YAGPJ,EAAUvB,IAAOkB,KAAKC,UAAU,KAChCF,EAAQjB,IAAOkB,KAAKC,WAAW,IACrCmC,EAAOa,OAAOH,EAAQ,IAAIhE,IAAOoE,kBAAkB7C,EAASN,EAAW,EAAJwC,OAEpEY,WAAU,SAAUC,GACnB1D,QAAQ0D,MAAMA,MAiBpBC,CAAY,GAAD,OAAIC,IAAJ,mBAJI,IACC,EAG6CvD,EAAOG,KACnE,IAEI,qBAAKqD,GAAG","file":"static/js/5.5b66fed4.chunk.js","sourcesContent":["import { useEffect } from 'react'\nimport Cesium from '@/utils/cesium'\nimport { MODELS_URL } from '@utils/path'\n\n/** @type import('cesium').Model **/\nlet model\n\nconst Model = () => {\n  useEffect(() => {\n    const viewer = new Cesium.CesiumWidget('stage')\n\n    const { scene } = viewer\n\n    function createModel(url, height = 0.0, heading = 0.0, pitch = 0.0, roll = 0.0) {\n      const hpr = new Cesium.HeadingPitchRoll(heading, pitch, roll)\n\n      const origin = Cesium.Cartesian3.fromDegrees(-123.0744619, 44.0503706, height)\n      const modelMatrix = Cesium.Transforms.headingPitchRollToFixedFrame(origin, hpr)\n\n      scene.primitives.removeAll()\n\n      model = scene.primitives.add(\n        Cesium.Model.fromGltf({\n          url,\n          modelMatrix: modelMatrix,\n          minimumPixelSize: 128\n        })\n      )\n\n      model.readyPromise\n        .then(function (model) {\n          model.color = Cesium.Color.fromAlpha(Cesium.Color.WHITE, 1)\n          model.colorBlendMode = Cesium.ColorBlendMode.HIGHLIGHT\n          model.colorBlendAmount = 0.5\n\n          // Play and loop all animations at half-speed\n          model.activeAnimations.addAll({\n            multiplier: 0.5,\n            loop: Cesium.ModelAnimationLoop.REPEAT\n          })\n\n          const camera = viewer.camera\n\n          // Zoom to model\n          const controller = scene.screenSpaceCameraController\n          const r = 2.0 * Math.max(model.boundingSphere.radius, camera.frustum.near)\n          controller.minimumZoomDistance = r * 0.5\n\n          const center = Cesium.Matrix4.multiplyByPoint(\n            model.modelMatrix,\n            model.boundingSphere.center,\n            new Cesium.Cartesian3()\n          )\n\n          const heading = Cesium.Math.toRadians(230.0)\n          const pitch = Cesium.Math.toRadians(-20.0)\n          camera.lookAt(center, new Cesium.HeadingPitchRange(heading, pitch, r * 2.0))\n        })\n        .otherwise(function (error) {\n          console.error(error)\n        })\n    }\n\n    const handler = new Cesium.ScreenSpaceEventHandler(scene.canvas)\n    handler.setInputAction(function (movement) {\n      const pick = scene.pick(movement.endPosition)\n      if (Cesium.defined(pick) && Cesium.defined(pick.node) && Cesium.defined(pick.mesh)) {\n        // Output glTF node and mesh under the mouse.\n        console.log('node: ' + pick.node.name + '. mesh: ' + pick.mesh.name)\n      }\n    }, Cesium.ScreenSpaceEventType.MOUSE_MOVE)\n\n    const height = 300.0\n    const heading = 0.0\n    const pitch = Cesium.Math.toRadians(10.0)\n    const roll = Cesium.Math.toRadians(-20.0)\n    createModel(`${MODELS_URL}/Cesium_Air.glb`, height, heading, pitch, roll)\n  }, [])\n\n  return <div id=\"stage\"></div>\n}\n\nexport default Model\n"],"sourceRoot":""}